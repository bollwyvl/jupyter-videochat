#!/usr/bin/env python3
""" perform a development install of jupyter-videochat and jupyter_videochat

    On Binder, this will run _after_ the environment has been fully created from
    the environment.yml in this directory.

    This script should also run locally on Linux/MacOS/Windows:

        python3 binder/postBuild
"""
import subprocess
import sys


def _(*args, **kwargs):
    """ Run a command, echoing the args

        fails hard if something goes wrong
    """
    print("\n\t", " ".join(args), "\n", flush=True)
    return_code = subprocess.call(args, **kwargs)
    if return_code != 0:
        print("\nERROR", return_code, " ".join(args), flush=True)
        sys.exit(return_code)


# do a dev install
_(sys.executable, "-m", "pip", "install", "-e", ".", "--no-deps")

# check for broken deps
_(sys.executable, "-m", "pip", "check")

# install dependencies (and build)
_("jlpm")

tarball = subprocess.check_output(["npm", "pack", "."]).decode("utf-8").strip()

# Link your development version of the extension with JupyterLab
_("jupyter", "labextension", "install", "--debug", "--no-build", tarball)

# Build lab
_("jupyter", "lab", "build", "--dev-build=False", "--minimize=True")

# verify the list of extensions one last time
_("jupyter", "labextension", "list")

# clean up
_("conda", "clean", "-yaf")
_("jlpm", "cache", "clean")

print("JupyterLab with jupyter-videochat is ready to run with:\n")
print("\tjupyter lab\n")
