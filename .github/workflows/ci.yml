name: CI

on:
  push:
    branches: master
  pull_request:
    branches: '*'

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        python-version: ["3.9"]
        node-version: ["14.x"]
        os: ["ubuntu"]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Install python build dependencies
        run: python -m pip install -U pip wheel setuptools

      - name: Install js dependencies
        run: jlpm --ignore-optional

      - name: Lint Lab Extension, etc.
        run: jlpm run lint:check

      - name: Build npm tarball
        run: mkdir dist && jlpm build && mv $(npm pack) dist

      - name: Build python distributions
        run: python setup.py sdist bdist_wheel

      - name: Generate distribution hashes
        run: cd dist && sha256sum * | tee SHA256SUMS

      - name: Upload distributions
        uses: actions/upload-artifact@v2
        with:
          name: jupyter-videochat ${{ github.run_number }} dist
          path: ./build

  test:
    needs: [build]
    name: test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.9"]
        os: ["ubuntu", "windows", "macos"]
        node-version: ["14.x"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install Node
      uses: actions/setup-node@v1
      with:
      node-version: ${{ matrix.node-version }}

    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'

    - name: Download distributions
      uses: actions/download-artifact@v2
      with:
        name: jupyter-videochat ${{ github.run_number }} dist
        path: ./dist

    - name: Install Python distribution
      run: python -m pip install dist/jupyter-videochat*.whl

    - name: Validate Server Extension
      run: |
        set -eux
        jupyter serverextension list 1>serverextensions 2>&1
        cat serverextensions | grep "jupyter_videochat.*OK"

    - name: Install Lab Extension Build Dependencies
      run: |
        set -eux
        jlpm

    - name: Install Lab Extension
      run: |
        jupyter labextension list
        jupyter labextension install --no-build --debug "dist/jupyterlab-videochat-*.tgz"
        jupyter labextension list

    - name: Build Lab
      run: |
        jupyter lab build --debug --dev-build=False --minimize=False
        jupyter labextension list

    - name: Validate Lab Extension
      run: |
        jupyter labextension list 1>labextensions 2>&1
        cat labextensions | grep "jupyterlab-videochat.*OK"

    - name: Lab Browser check
      run: |
        python -m jupyterlab.browser_check
